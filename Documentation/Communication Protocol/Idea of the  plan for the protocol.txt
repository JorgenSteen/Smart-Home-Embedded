# How smart should the MCU be
When deciding how smart the MCU be the first question is. What makes a smart MCU?
Now a days it seems like smart is defined as being able to communicate with your mobile telephone. I say this because the only different between a conventional oven or light and a smart light and smart oven is that it is controlled with the phone, and maybe a few more option. This is not veyr smart in my opinion, because for something to be smart it needs to make decition on it is own. Analysing its input and making a decion based on this. More than a simple case structure or if-loop. To make this possible you will extensive algorytme that hopefully learns and and adapts to its enviorment. An oven that learns from its enviorment and understand how long it takes to heat the room it is in would be considerd smart. 

Since this will be a a lot of work to establish at the MCU level, and the assigment is more about teamwork rather than making smart MCU we have choosen to keep the intelligence on the computer or more specific in labview. Since everything is in contact with the labview program the smart home package will not loose any intelegents as a whole, it will only be concentrated in the labview program. But the MCU only have an open and adaptable program, which the behavor that can be changed by labview. IE when the heat is on is decided by labview, and other examples that will become clear in the rest of the text 
Disadvantages of this is that it might be less safe. Someone can control the behavior of the MCU remotly. THis also creates more traffic on the network. If the encription is good and the traffic is low, these things will not be a problem, but this is not something that might be easy to predict.

Advantages with this is that you can change the behavior and intelligence in on place, rather than many. Labview can also have access to at all the MCU data both in real time but also look at past data and therfore have more data to draw from. The computer is also more powerful so it can also complete more complicated task more easily.

For this reason i have choose to let the MCU and its behavior be dynamic based on input from labview, with no intelligence on its own. An example of this is the Alarm system. If there is an Earthquake locally or at one of the other MCU, they will just blindly send the accelometer data to the computer were the data will be monitored. When Labview decieded that it is an earthquake according to their paramenter it will send out and Alarm message with an attached string which the MCU will display. It will then request the MCU to do any other measure it deems neccecery. The MCU will do what the LabVIEW program ask Mindlessly and without understanding why. It will simply comply.

